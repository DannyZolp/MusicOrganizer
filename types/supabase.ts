/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/": {
    get: {
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/email_logs": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.email_logs.id"];
          invite_id?: parameters["rowFilter.email_logs.invite_id"];
          created_at?: parameters["rowFilter.email_logs.created_at"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["email_logs"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** email_logs */
          email_logs?: definitions["email_logs"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.email_logs.id"];
          invite_id?: parameters["rowFilter.email_logs.invite_id"];
          created_at?: parameters["rowFilter.email_logs.created_at"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.email_logs.id"];
          invite_id?: parameters["rowFilter.email_logs.invite_id"];
          created_at?: parameters["rowFilter.email_logs.created_at"];
        };
        body: {
          /** email_logs */
          email_logs?: definitions["email_logs"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/groups": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.groups.id"];
          name?: parameters["rowFilter.groups.name"];
          created_at?: parameters["rowFilter.groups.created_at"];
          owner_id?: parameters["rowFilter.groups.owner_id"];
          /** A short description of the group */
          description?: parameters["rowFilter.groups.description"];
          /** The color associated with the band for in-client UI elements */
          color?: parameters["rowFilter.groups.color"];
          organization_id?: parameters["rowFilter.groups.organization_id"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["groups"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** groups */
          groups?: definitions["groups"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.groups.id"];
          name?: parameters["rowFilter.groups.name"];
          created_at?: parameters["rowFilter.groups.created_at"];
          owner_id?: parameters["rowFilter.groups.owner_id"];
          /** A short description of the group */
          description?: parameters["rowFilter.groups.description"];
          /** The color associated with the band for in-client UI elements */
          color?: parameters["rowFilter.groups.color"];
          organization_id?: parameters["rowFilter.groups.organization_id"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.groups.id"];
          name?: parameters["rowFilter.groups.name"];
          created_at?: parameters["rowFilter.groups.created_at"];
          owner_id?: parameters["rowFilter.groups.owner_id"];
          /** A short description of the group */
          description?: parameters["rowFilter.groups.description"];
          /** The color associated with the band for in-client UI elements */
          color?: parameters["rowFilter.groups.color"];
          organization_id?: parameters["rowFilter.groups.organization_id"];
        };
        body: {
          /** groups */
          groups?: definitions["groups"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/invites": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.invites.id"];
          created_at?: parameters["rowFilter.invites.created_at"];
          email?: parameters["rowFilter.invites.email"];
          organization_id?: parameters["rowFilter.invites.organization_id"];
          issuer_id?: parameters["rowFilter.invites.issuer_id"];
          org_name?: parameters["rowFilter.invites.org_name"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["invites"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** invites */
          invites?: definitions["invites"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.invites.id"];
          created_at?: parameters["rowFilter.invites.created_at"];
          email?: parameters["rowFilter.invites.email"];
          organization_id?: parameters["rowFilter.invites.organization_id"];
          issuer_id?: parameters["rowFilter.invites.issuer_id"];
          org_name?: parameters["rowFilter.invites.org_name"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.invites.id"];
          created_at?: parameters["rowFilter.invites.created_at"];
          email?: parameters["rowFilter.invites.email"];
          organization_id?: parameters["rowFilter.invites.organization_id"];
          issuer_id?: parameters["rowFilter.invites.issuer_id"];
          org_name?: parameters["rowFilter.invites.org_name"];
        };
        body: {
          /** invites */
          invites?: definitions["invites"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/leases": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.leases.id"];
          score_id?: parameters["rowFilter.leases.score_id"];
          group_id?: parameters["rowFilter.leases.group_id"];
          created_at?: parameters["rowFilter.leases.created_at"];
          returned_at?: parameters["rowFilter.leases.returned_at"];
          owner_id?: parameters["rowFilter.leases.owner_id"];
          organization_id?: parameters["rowFilter.leases.organization_id"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["leases"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** leases */
          leases?: definitions["leases"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.leases.id"];
          score_id?: parameters["rowFilter.leases.score_id"];
          group_id?: parameters["rowFilter.leases.group_id"];
          created_at?: parameters["rowFilter.leases.created_at"];
          returned_at?: parameters["rowFilter.leases.returned_at"];
          owner_id?: parameters["rowFilter.leases.owner_id"];
          organization_id?: parameters["rowFilter.leases.organization_id"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.leases.id"];
          score_id?: parameters["rowFilter.leases.score_id"];
          group_id?: parameters["rowFilter.leases.group_id"];
          created_at?: parameters["rowFilter.leases.created_at"];
          returned_at?: parameters["rowFilter.leases.returned_at"];
          owner_id?: parameters["rowFilter.leases.owner_id"];
          organization_id?: parameters["rowFilter.leases.organization_id"];
        };
        body: {
          /** leases */
          leases?: definitions["leases"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/memberships": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.memberships.id"];
          created_at?: parameters["rowFilter.memberships.created_at"];
          issuer_id?: parameters["rowFilter.memberships.issuer_id"];
          user_id?: parameters["rowFilter.memberships.user_id"];
          organization_id?: parameters["rowFilter.memberships.organization_id"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["memberships"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** memberships */
          memberships?: definitions["memberships"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.memberships.id"];
          created_at?: parameters["rowFilter.memberships.created_at"];
          issuer_id?: parameters["rowFilter.memberships.issuer_id"];
          user_id?: parameters["rowFilter.memberships.user_id"];
          organization_id?: parameters["rowFilter.memberships.organization_id"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.memberships.id"];
          created_at?: parameters["rowFilter.memberships.created_at"];
          issuer_id?: parameters["rowFilter.memberships.issuer_id"];
          user_id?: parameters["rowFilter.memberships.user_id"];
          organization_id?: parameters["rowFilter.memberships.organization_id"];
        };
        body: {
          /** memberships */
          memberships?: definitions["memberships"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/organizations": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.organizations.id"];
          name?: parameters["rowFilter.organizations.name"];
          location?: parameters["rowFilter.organizations.location"];
          description?: parameters["rowFilter.organizations.description"];
          created_at?: parameters["rowFilter.organizations.created_at"];
          owner_id?: parameters["rowFilter.organizations.owner_id"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["organizations"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** organizations */
          organizations?: definitions["organizations"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.organizations.id"];
          name?: parameters["rowFilter.organizations.name"];
          location?: parameters["rowFilter.organizations.location"];
          description?: parameters["rowFilter.organizations.description"];
          created_at?: parameters["rowFilter.organizations.created_at"];
          owner_id?: parameters["rowFilter.organizations.owner_id"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.organizations.id"];
          name?: parameters["rowFilter.organizations.name"];
          location?: parameters["rowFilter.organizations.location"];
          description?: parameters["rowFilter.organizations.description"];
          created_at?: parameters["rowFilter.organizations.created_at"];
          owner_id?: parameters["rowFilter.organizations.owner_id"];
        };
        body: {
          /** organizations */
          organizations?: definitions["organizations"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/profiles": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.profiles.id"];
          name?: parameters["rowFilter.profiles.name"];
          default_org_id?: parameters["rowFilter.profiles.default_org_id"];
          created_at?: parameters["rowFilter.profiles.created_at"];
          email?: parameters["rowFilter.profiles.email"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["profiles"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** profiles */
          profiles?: definitions["profiles"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.profiles.id"];
          name?: parameters["rowFilter.profiles.name"];
          default_org_id?: parameters["rowFilter.profiles.default_org_id"];
          created_at?: parameters["rowFilter.profiles.created_at"];
          email?: parameters["rowFilter.profiles.email"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.profiles.id"];
          name?: parameters["rowFilter.profiles.name"];
          default_org_id?: parameters["rowFilter.profiles.default_org_id"];
          created_at?: parameters["rowFilter.profiles.created_at"];
          email?: parameters["rowFilter.profiles.email"];
        };
        body: {
          /** profiles */
          profiles?: definitions["profiles"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/scores": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.scores.id"];
          custom_id?: parameters["rowFilter.scores.custom_id"];
          name?: parameters["rowFilter.scores.name"];
          description?: parameters["rowFilter.scores.description"];
          owner_id?: parameters["rowFilter.scores.owner_id"];
          created_at?: parameters["rowFilter.scores.created_at"];
          author?: parameters["rowFilter.scores.author"];
          level?: parameters["rowFilter.scores.level"];
          organization_id?: parameters["rowFilter.scores.organization_id"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["scores"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** scores */
          scores?: definitions["scores"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.scores.id"];
          custom_id?: parameters["rowFilter.scores.custom_id"];
          name?: parameters["rowFilter.scores.name"];
          description?: parameters["rowFilter.scores.description"];
          owner_id?: parameters["rowFilter.scores.owner_id"];
          created_at?: parameters["rowFilter.scores.created_at"];
          author?: parameters["rowFilter.scores.author"];
          level?: parameters["rowFilter.scores.level"];
          organization_id?: parameters["rowFilter.scores.organization_id"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.scores.id"];
          custom_id?: parameters["rowFilter.scores.custom_id"];
          name?: parameters["rowFilter.scores.name"];
          description?: parameters["rowFilter.scores.description"];
          owner_id?: parameters["rowFilter.scores.owner_id"];
          created_at?: parameters["rowFilter.scores.created_at"];
          author?: parameters["rowFilter.scores.author"];
          level?: parameters["rowFilter.scores.level"];
          organization_id?: parameters["rowFilter.scores.organization_id"];
        };
        body: {
          /** scores */
          scores?: definitions["scores"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
}

export interface definitions {
  email_logs: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    invite_id: string;
    created_at?: string;
  };
  groups: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    id: string;
    name: string;
    created_at?: string;
    owner_id: string;
    /** A short description of the group */
    description?: string;
    /** The color associated with the band for in-client UI elements */
    color: string;
    /**
     * Note:
     * This is a Foreign Key to `organizations.id`.<fk table='organizations' column='id'/>
     */
    organization_id?: string;
  };
  invites: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    id: string;
    created_at?: string;
    email: string;
    /**
     * Note:
     * This is a Foreign Key to `organizations.id`.<fk table='organizations' column='id'/>
     */
    organization_id: string;
    issuer_id: string;
    org_name: string;
  };
  leases: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    id: string;
    /**
     * Note:
     * This is a Foreign Key to `scores.id`.<fk table='scores' column='id'/>
     */
    score_id?: string;
    /**
     * Note:
     * This is a Foreign Key to `groups.id`.<fk table='groups' column='id'/>
     */
    group_id?: string;
    created_at?: string;
    returned_at?: string;
    owner_id?: string;
    /**
     * Note:
     * This is a Foreign Key to `organizations.id`.<fk table='organizations' column='id'/>
     */
    organization_id?: string;
  };
  memberships: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    id: string;
    created_at?: string;
    issuer_id: string;
    user_id: string;
    /**
     * Note:
     * This is a Foreign Key to `organizations.id`.<fk table='organizations' column='id'/>
     */
    organization_id: string;
  };
  organizations: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    id: string;
    name: string;
    location: string;
    description?: string;
    created_at?: string;
    owner_id?: string;
  };
  profiles: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    id: string;
    name: string;
    /**
     * Note:
     * This is a Foreign Key to `organizations.id`.<fk table='organizations' column='id'/>
     */
    default_org_id: string;
    created_at?: string;
    email: string;
  };
  scores: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    id: string;
    custom_id: string;
    name: string;
    description?: string;
    owner_id: string;
    created_at?: string;
    author: string;
    level: string;
    /**
     * Note:
     * This is a Foreign Key to `organizations.id`.<fk table='organizations' column='id'/>
     */
    organization_id?: string;
  };
}

export interface parameters {
  /** Preference */
  preferParams: "params=single-object";
  /** Preference */
  preferReturn: "return=representation" | "return=minimal" | "return=none";
  /** Preference */
  preferCount: "count=none";
  /** Filtering Columns */
  select: string;
  /** On Conflict */
  on_conflict: string;
  /** Ordering */
  order: string;
  /** Limiting and Pagination */
  range: string;
  /** Limiting and Pagination */
  rangeUnit: string;
  /** Limiting and Pagination */
  offset: string;
  /** Limiting and Pagination */
  limit: string;
  /** email_logs */
  "body.email_logs": definitions["email_logs"];
  "rowFilter.email_logs.id": string;
  "rowFilter.email_logs.invite_id": string;
  "rowFilter.email_logs.created_at": string;
  /** groups */
  "body.groups": definitions["groups"];
  "rowFilter.groups.id": string;
  "rowFilter.groups.name": string;
  "rowFilter.groups.created_at": string;
  "rowFilter.groups.owner_id": string;
  /** A short description of the group */
  "rowFilter.groups.description": string;
  /** The color associated with the band for in-client UI elements */
  "rowFilter.groups.color": string;
  "rowFilter.groups.organization_id": string;
  /** invites */
  "body.invites": definitions["invites"];
  "rowFilter.invites.id": string;
  "rowFilter.invites.created_at": string;
  "rowFilter.invites.email": string;
  "rowFilter.invites.organization_id": string;
  "rowFilter.invites.issuer_id": string;
  "rowFilter.invites.org_name": string;
  /** leases */
  "body.leases": definitions["leases"];
  "rowFilter.leases.id": string;
  "rowFilter.leases.score_id": string;
  "rowFilter.leases.group_id": string;
  "rowFilter.leases.created_at": string;
  "rowFilter.leases.returned_at": string;
  "rowFilter.leases.owner_id": string;
  "rowFilter.leases.organization_id": string;
  /** memberships */
  "body.memberships": definitions["memberships"];
  "rowFilter.memberships.id": string;
  "rowFilter.memberships.created_at": string;
  "rowFilter.memberships.issuer_id": string;
  "rowFilter.memberships.user_id": string;
  "rowFilter.memberships.organization_id": string;
  /** organizations */
  "body.organizations": definitions["organizations"];
  "rowFilter.organizations.id": string;
  "rowFilter.organizations.name": string;
  "rowFilter.organizations.location": string;
  "rowFilter.organizations.description": string;
  "rowFilter.organizations.created_at": string;
  "rowFilter.organizations.owner_id": string;
  /** profiles */
  "body.profiles": definitions["profiles"];
  "rowFilter.profiles.id": string;
  "rowFilter.profiles.name": string;
  "rowFilter.profiles.default_org_id": string;
  "rowFilter.profiles.created_at": string;
  "rowFilter.profiles.email": string;
  /** scores */
  "body.scores": definitions["scores"];
  "rowFilter.scores.id": string;
  "rowFilter.scores.custom_id": string;
  "rowFilter.scores.name": string;
  "rowFilter.scores.description": string;
  "rowFilter.scores.owner_id": string;
  "rowFilter.scores.created_at": string;
  "rowFilter.scores.author": string;
  "rowFilter.scores.level": string;
  "rowFilter.scores.organization_id": string;
}

export interface operations {}

export interface external {}
